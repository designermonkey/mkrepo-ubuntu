#!/usr/bin/env bash

#  The MIT License (MIT)
#
#  Copyright (c) 2013 John Porter
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy of
#  this software and associated documentation files (the "Software"), to deal in
#  the Software without restriction, including without limitation the rights to
#  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
#  the Software, and to permit persons to whom the Software is furnished to do so,
#  subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
#  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

VIRTUALHOST=""
REPOSITORY=""
USERNAME=$SUDO_USER
GROUPNAME=$SUDO_USER
SITES="/data/sites"
REPOS="/data/git"
TEMPLATE="${REPOS}/template.hook"

VERBOSE=0

readonly VERSION="1.0.0"
readonly ERROR_SUDO=2
readonly ERROR_USAGE=3


runsudo() {
    echo "mkvhost needs root access. Please run as sudo";
    exit $ERROR_SUDO
}

usage() {
    echo "mkrepo [<options>] <reponame> <vhostname>";
    exit $ERROR_USAGE
}

usage_long() {
less -FRSX << EOF
USAGE
    mkrepo [<options>] <reponame> <vhostname>


DESCRIPTION
    Create a new git bare repository, connected to a virtualhost on your Ubuntu system.

    This script links a bare git repository to a virtualhost on your ubuntu system, and
    allows you to push to the repo, and automatically deploy the files into your vhost.


OPTIONS
    -h, --help          Shows this help screen.
    -u, --user          Configure the username to give ownership of the repository.
    -g, --group         Configure the group to give ownership of the repository.
    -r, --repos         Configure the location of your repositories.
    -s, --sites         Configure the location of your folder to contain the virtualhost http root.
    -vv, --verbose      Output messages during processing.
    -v, --version       Shows the version number for this script.
    -t, --template      Specify a template file to use for the post-recieve hook


TEMPLATE
    A custom template can be specified to use instead of the bundled simple template.
    There are specific values that are needed in the template to be replaced with
    values from the script.

    USERNAME            Wherever you want the supplied or default user name to be placed
                        inside the template.
    GROUPNAME           Wherever you want the supplied or default group name to be placed
                        inside the template.
    WORKTREE            Wherever you want the supplied or default sites path to be placed
                        inside the template.

REPONAME
    Name of the repository folder.

VHOSTNAME
    The name for the virtualhost to autmatically deploy to.

EOF
exit 0
}

show_version() {
    echo "mkrepo version ${VERSION}"
    exit 0
}

create_repository() {
    if [[ -e ${GITFOLDER}/${REPOSITORY}.git ]]; then
        echo "${GITFOLDER}/${REPOSITORY}.git already exists. Skipping creation.";
    else
        sudo mkdir -p ${REPOS}/${REPOSITORY}.git
        sudo chown ${USERNAME}:${GROUPNAME} ${REPOS}/${REPOSITORY}.git
        cd ${REPOS}/${REPOSITORY}.git
        git init --bare
        find ${REPOS}/${REPOSITORY}.git -type d -exec sudo chmod -R 775 {} \;
        find ${REPOS}/${REPOSITORY}.git -type f -exec sudo chmod 664 {} \;
    fi
}

add_hook() {
    WORKTREE="${SITES}/${VIRTUALHOST}"
    cat ${TEMPLATE}| sed "s@WORKTREE@${WORKTREE}@g" | sed "s@USERNAME@${USERNAME}@g" sed "s@GROUPNAME@${GROUPNAME}@g" > ${REPOS}/${REPOSITORY}.git/hooks/post-receive
    sudo chmod a+x ${REPOS}/${REPOSITORY}.git/hooks/post-receive
}

main() {
    create_repository
    add_hook
}


if [[ $(whoami) != "root" ]]; then
    runsudo;
fi

if [[ $# = 0 ]]; then
    usage;
fi

while test $# != 0
do
    case "$1" in
        -v|--version)
            show_version
            ;;
        -h|--help)
            usage_long
            ;;
        -u|--user*)
            case "$#,$1" in
                *,*=*)
                    echo "it is: ${1}"
                    USERNAME=$(expr "z$1" : 'z-[^=]*=\(.*\)')
                    ;;
                *)
                    if ! echo "$2" | egrep -q '^-'; then
                        USERNAME="$2"
                        shift
                    fi
                    ;;
            esac
            ;;
        -g|--group*)
            case "$#,$1" in
                *,*=*)
                    GROUPNAME=$(expr "z$1" : 'z-[^=]*=\(.*\)')
                    ;;
                *)
                    if ! echo "$2" | egrep -q '^-'; then
                        GROUPNAME="$2"
                        shift
                    fi
                    ;;
            esac
            ;;
        -r|--repos*)
            case "$#,$1" in
                *,*=*)
                    REPOS=$(expr "z$1" : 'z-[^=]*=\(.*\)')
                    ;;
                *)
                    if ! echo "$2" | egrep -q '^-'; then
                        REPOS="$2"
                        shift
                    fi
                    ;;
            esac
            ;;
        -s|--sites*)
            case "$#,$1" in
                *,*=*)
                    SITES=$(expr "z$1" : 'z-[^=]*=\(.*\)')
                    ;;
                *)
                    if ! echo "$2" | egrep -q '^-'; then
                        SITES="$2"
                        shift
                    fi
                    ;;
            esac
            ;;
        -t|--template*)
            case "$#,$1" in
                *,*=*)
                    TEMPLATE=$(expr "z$1" : 'z-[^=]*=\(.*\)')
                    ;;
                *)
                    if ! echo "$2" | egrep -q '^-'; then
                        TEMPLATE="$2"
                        shift
                    fi
                    ;;
            esac
            ;;
        -vv|--verbose)
            VERBOSE=1
            ;;
        *)
            if [[ $# = 2 ]]; then
                [ -n "$1" ] && REPOSITORY=$1
            fi

            if [[ $# = 1 ]]; then
                [ -n "$1" ] && VIRTUALHOST=$1
            fi
            ;;
    esac
    shift
done

main

